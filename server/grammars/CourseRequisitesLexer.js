// Generated from .\CourseRequisitesLexer.g4 by ANTLR 4.12.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,11,142,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,
1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,
4,6,63,8,6,11,6,12,6,64,1,7,1,7,1,7,1,7,1,8,4,8,72,8,8,11,8,12,8,73,1,8,
1,8,4,8,78,8,8,11,8,12,8,79,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
1,9,1,9,1,9,1,9,1,9,1,9,1,10,4,10,100,8,10,11,10,12,10,101,1,10,3,10,105,
8,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
3,10,135,8,10,1,10,1,10,1,11,1,11,1,11,1,11,0,0,12,2,0,4,1,6,2,8,3,10,4,
12,5,14,6,16,7,18,8,20,9,22,10,24,11,2,0,1,5,3,0,9,10,13,13,32,32,3,0,48,
57,65,90,97,122,2,0,48,57,65,90,1,0,65,90,2,0,43,43,45,45,145,0,4,1,0,0,
0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,
0,0,0,1,18,1,0,0,0,1,20,1,0,0,0,1,22,1,0,0,0,1,24,1,0,0,0,2,26,1,0,0,0,4,
28,1,0,0,0,6,32,1,0,0,0,8,35,1,0,0,0,10,37,1,0,0,0,12,39,1,0,0,0,14,62,1,
0,0,0,16,66,1,0,0,0,18,71,1,0,0,0,20,81,1,0,0,0,22,99,1,0,0,0,24,138,1,0,
0,0,26,27,7,0,0,0,27,3,1,0,0,0,28,29,5,97,0,0,29,30,5,110,0,0,30,31,5,100,
0,0,31,5,1,0,0,0,32,33,5,111,0,0,33,34,5,114,0,0,34,7,1,0,0,0,35,36,5,40,
0,0,36,9,1,0,0,0,37,38,5,41,0,0,38,11,1,0,0,0,39,40,5,85,0,0,40,41,5,110,
0,0,41,42,5,100,0,0,42,43,5,101,0,0,43,44,5,114,0,0,44,45,5,103,0,0,45,46,
5,114,0,0,46,47,5,97,0,0,47,48,5,100,0,0,48,49,5,117,0,0,49,50,5,97,0,0,
50,51,5,116,0,0,51,52,5,101,0,0,52,53,5,32,0,0,53,54,5,108,0,0,54,55,5,101,
0,0,55,56,5,118,0,0,56,57,5,101,0,0,57,58,5,108,0,0,58,59,1,0,0,0,59,60,
6,5,0,0,60,13,1,0,0,0,61,63,7,1,0,0,62,61,1,0,0,0,63,64,1,0,0,0,64,62,1,
0,0,0,64,65,1,0,0,0,65,15,1,0,0,0,66,67,3,2,0,0,67,68,1,0,0,0,68,69,6,7,
1,0,69,17,1,0,0,0,70,72,7,2,0,0,71,70,1,0,0,0,72,73,1,0,0,0,73,71,1,0,0,
0,73,74,1,0,0,0,74,75,1,0,0,0,75,77,5,32,0,0,76,78,7,2,0,0,77,76,1,0,0,0,
78,79,1,0,0,0,79,77,1,0,0,0,79,80,1,0,0,0,80,19,1,0,0,0,81,82,5,77,0,0,82,
83,5,105,0,0,83,84,5,110,0,0,84,85,5,105,0,0,85,86,5,109,0,0,86,87,5,117,
0,0,87,88,5,109,0,0,88,89,5,32,0,0,89,90,5,71,0,0,90,91,5,114,0,0,91,92,
5,97,0,0,92,93,5,100,0,0,93,94,5,101,0,0,94,95,5,32,0,0,95,96,5,111,0,0,
96,97,5,102,0,0,97,21,1,0,0,0,98,100,7,3,0,0,99,98,1,0,0,0,100,101,1,0,0,
0,101,99,1,0,0,0,101,102,1,0,0,0,102,104,1,0,0,0,103,105,7,4,0,0,104,103,
1,0,0,0,104,105,1,0,0,0,105,134,1,0,0,0,106,107,5,32,0,0,107,108,5,91,0,
0,108,109,5,109,0,0,109,110,5,97,0,0,110,111,5,121,0,0,111,112,5,32,0,0,
112,113,5,98,0,0,113,114,5,101,0,0,114,115,5,32,0,0,115,116,5,116,0,0,116,
117,5,97,0,0,117,118,5,107,0,0,118,119,5,101,0,0,119,120,5,110,0,0,120,121,
5,32,0,0,121,122,5,99,0,0,122,123,5,111,0,0,123,124,5,110,0,0,124,125,5,
99,0,0,125,126,5,117,0,0,126,127,5,114,0,0,127,128,5,114,0,0,128,129,5,101,
0,0,129,130,5,110,0,0,130,131,5,116,0,0,131,132,5,108,0,0,132,133,5,121,
0,0,133,135,5,93,0,0,134,106,1,0,0,0,134,135,1,0,0,0,135,136,1,0,0,0,136,
137,6,10,2,0,137,23,1,0,0,0,138,139,3,2,0,0,139,140,1,0,0,0,140,141,6,11,
1,0,141,25,1,0,0,0,8,0,1,64,73,79,101,104,134,3,2,1,0,6,0,0,2,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CourseRequisitesLexer extends antlr4.Lexer {

    static grammarFileName = "CourseRequisitesLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "COURSE_MODE" ];
	static literalNames = [ null, "'and'", "'or'", "'('", "')'", "'Undergraduate level'", 
                         null, null, null, "'Minimum Grade of'" ];
	static symbolicNames = [ null, "AND", "OR", "LPAREN", "RPAREN", "COURSE_REQUISITE", 
                          "WORD", "WS", "COURSE_NAME", "COURSE_GRADE_TEXT", 
                          "COURSE_GRADE", "COURSE_WS" ];
	static ruleNames = [ "Ws", "AND", "OR", "LPAREN", "RPAREN", "COURSE_REQUISITE", 
                      "WORD", "WS", "COURSE_NAME", "COURSE_GRADE_TEXT", 
                      "COURSE_GRADE", "COURSE_WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

CourseRequisitesLexer.EOF = antlr4.Token.EOF;
CourseRequisitesLexer.AND = 1;
CourseRequisitesLexer.OR = 2;
CourseRequisitesLexer.LPAREN = 3;
CourseRequisitesLexer.RPAREN = 4;
CourseRequisitesLexer.COURSE_REQUISITE = 5;
CourseRequisitesLexer.WORD = 6;
CourseRequisitesLexer.WS = 7;
CourseRequisitesLexer.COURSE_NAME = 8;
CourseRequisitesLexer.COURSE_GRADE_TEXT = 9;
CourseRequisitesLexer.COURSE_GRADE = 10;
CourseRequisitesLexer.COURSE_WS = 11;

CourseRequisitesLexer.COURSE_MODE = 1;




